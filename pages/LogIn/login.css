#login_outer{
    text-align: center;
    transform: translateY(5vh);
}
#login_inner{
    display: inline-block;
}
.input-box{
    position:relative; margin:10px 0;
}

.input-box > input{
    background:transparent; border:none; border-bottom: solid 1px #ccc; padding:20px 0px 5px 0px; font-size:14pt; width:100%;
}

.loginput::placeholder{
    color:transparent;
}

.loginput:placeholder-shown + .login_label{
    color:#aaa; font-size:14pt; top:15px;
}

.loginput:focus + .login_label, .login_label{
    color:#8aa1a1;
    font-size:10pt;
    pointer-events: none;
    position: absolute;
    left:0px;
    top:0px;
    transition: all 0.2s ease ;
    -webkit-transition: all 0.2s ease;
    -moz-transition: all 0.2s ease;
    -o-transition: all 0.2s ease;
}
.loginput:focus, .loginput:not(:placeholder-shown){
    border-bottom: solid 1px #8aa1a1;
    outline:none;
}




:root {
    --bg: #3C465C;
    --primary: #a9afaf;
    --solid: #F08080;
    --btn-w: 5em;
    --dot-w: calc(var(--btn-w)*.2);
    --tr-X: calc(var(--btn-w) - var(--dot-w));
}
* {box-sizing: border-box;}
*:before, *:after {box-sizing: border-box;}

.btn {
    position: relative;
    margin: 0 auto;
    width: var(--btn-w);
    color: #9A9A9A;
    /*color: var(--primary);*/
    border: .15em solid var(--primary);
    border-radius: 5em;
    text-transform: uppercase;
    text-align: center;
    font-size: 1em;
    line-height: 2em;
    cursor: pointer;
}
.dot {
    content: '';
    position: absolute;
    top: 0;
    width: var(--dot-w);
    height: 100%;
    border-radius: 100%;
    transition: all 300ms ease;
    display: none;
}
.dot:after {
    content: '';
    position: absolute;
    left: calc(50% - .4em);
    top: -.4em;
    height: .8em;
    width: .8em;
    background: var(--solid);
    border-radius: 1em;
    border: .25em solid var(--solid);
    box-shadow: 0 0 .7em var(--solid),
    0 0 2em var(--primary);
}
.btn:hover .dot,
.btn:focus .dot {
    animation: atom 2s infinite linear;
    display: block;
}
@keyframes atom {
    0% {transform: translateX(0) rotate(0);}
    30%{transform: translateX(var(--tr-X)) rotate(0);}
    50% {transform: translateX(var(--tr-X)) rotate(180deg);}
    80% {transform: translateX(0) rotate(180deg);}
    100% {transform: translateX(0) rotate(360deg);}
}